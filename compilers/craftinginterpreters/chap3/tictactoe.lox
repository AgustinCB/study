class ListNode {
  init(value, next) {
    this.value = value;
    this.next = next;
  }
}

class List {
  init() {
    this.length = 0;
    this.head = null;
    this.tail = null;
  }

  add(element) {
    var node = ListNode(element, null)
    if (this.head == null) {
      this.head = node;
      this.tail = node;
    } else {
      this.tail.next = node;
      this.tail = node;
    }
    this.length = this.length + 1;
  }

  set(index, element) {
    if (index >= this.length) return null;
    var current = this.head;

    for (var i = 0; i < index; i++) {
      current = current.next;
    }

    var result = current.value;
    current.value = element;
    return result
  }

  get(index) {
    if (index >= this.length) return null;
    var result = null;
    var current = this.head;

    for (var i = 0; i < index; i++) {
      if (current == null) return null;
      current = current.next;
    }

    return current.value;
  }
}

class EmptySpace {
  toString() {
    return ' ';
  }
}

class UserCheck {
  init(isCircle) {
    this.isCircle = isCircle;
  }
  toString() {
    if (this.isCircle) {
      return 'O';
    } else {
      return 'X';
    }
  }
}

class Game {
  init() {
    this.board = List();
    for (var i = 0; i < 9; i++) {
      this.board.add(EmptySpace());
    }
  }

  set(index, isCircle) {
    var element = UserCheck(isCircle);
    this.board.set(index, isCircle);
  }

  isCompleted() {
    var winnerByRows = this.isThereAWinnerByRows();
    if (winnerByRows != null) return winnerByRows;
    var winnerByCols = this.isThereAWinnerByCols();
    if (winnerByCols != null) return winnerByCols;
    var winnerByDiag = this.isThereAWinnerByDiag();
    if (winnerByDiag != null) return winnerByDiag;
    return this.isTie();
  }

  isThereAWinnerByRows() {
    for (var i = 0; i < 3; i++) {
      var first = this.board.get(i * 3 + 0);
      var second = this.board.get(i * 3 + 1);
      var third = this.board.get(i * 3 + 2);
      if (first.toString() != ' ' &&
          first.toString() == second.toString() &&
          first.toString() == third.toString())
          return first.toString();
    }
    return null;
  }

  isThereAWinnerByCols() {
    for (var i = 0; i < 3; i++) {
      var first = this.board.get(0 * 3 + i);
      var second = this.board.get(1 * 3 + i);
      var third = this.board.get(2 * 3 + i);
      if (first.toString() != ' ' &&
          first.toString() == second.toString() &&
          first.toString() == third.toString())
          return first.toString();
    }
    return null;
  }

  isThereAWinnerByDiag() {
    var first = this.board.get(0);
    var second = this.board.get(4);
    var third = this.board.get(8);
    if (first.toString() != ' ' &&
        first.toString() == second.toString() &&
        first.toString() == third.toString())
        return first.toString();
    first = this.board.get(2);
    second = this.board.get(4);
    third = this.board.get(6);
    if (first.toString() != ' ' &&
        first.toString() == second.toString() &&
        first.toString() == third.toString())
        return first.toString();
    return null;
  }

  isTie() {
    for (var i = 0; i < 9; i++) {
      if (this.board.get(i).toString() == ' ') return false;
    }
    return true;
  }

  toString() {
    var result = '';
    for (var i = 0; i < 9; i++) {
      result = result + this.board.get(i).toString();
      if ((i+1) % 3 == 0) result = result + '\n';
    }
  }
}
